[{"C:\\Users\\Student-PC\\stepper\\client\\src\\index.js":"1","C:\\Users\\Student-PC\\stepper\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Student-PC\\stepper\\client\\src\\App.js":"3","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\list\\List.js":"4","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\Dialog.js":"5","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\Stepper.js":"6","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\register\\Register.js":"7","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\service\\Service.js":"8","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\welfare\\Welfare.js":"9"},{"size":517,"mtime":1614314804511,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1614314804511,"results":"12","hashOfConfig":"11"},{"size":215,"mtime":1614316209720,"results":"13","hashOfConfig":"11"},{"size":4132,"mtime":1614576275622,"results":"14","hashOfConfig":"11"},{"size":1431,"mtime":1614582583406,"results":"15","hashOfConfig":"11"},{"size":4343,"mtime":1614577362895,"results":"16","hashOfConfig":"11"},{"size":11989,"mtime":1614584124226,"results":"17","hashOfConfig":"11"},{"size":10034,"mtime":1614321124844,"results":"18","hashOfConfig":"11"},{"size":10032,"mtime":1614321115565,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1nha7un",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"C:\\Users\\Student-PC\\stepper\\client\\src\\index.js",[],["44","45"],"C:\\Users\\Student-PC\\stepper\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Student-PC\\stepper\\client\\src\\App.js",["46"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport List from './components/list/List.js'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <List/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\list\\List.js",["47","48","49","50"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport MaterialTable from 'material-table'\r\nimport { Dialog } from '@material-ui/core';\r\nimport FormDialog from '../Dialog';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst List = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n    const [columns, setColumns] = React.useState([\r\n        { title: 'Adı', field: 'name' },\r\n        { title: 'Soyadı', field: 'surname' },\r\n        { title: 'Doğum Yılı', field: 'birthYear', type: 'numeric' },\r\n        { title: 'Doğum Yeri', field: 'birthCity', lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' } }\r\n    ]);\r\n    const [data, setData] = React.useState([\r\n        { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 }\r\n    ])\r\n    return (\r\n        <div style={{ maxWidth: '90%', margin : 'auto' }}>\r\n            <FormDialog open={open} onClose={handleClose}/>\r\n            <MaterialTable\r\n                title = \"Dummy Data\"\r\n                columns = {columns}\r\n                data = {data}\r\n                actions={[\r\n                    {\r\n                        icon: AddIcon,\r\n                        tooltip: 'Add',\r\n                        isFreeAction: true,\r\n                        onClick: handleClickOpen,\r\n                    },\r\n                    // {\r\n                    //     icon: AddIcon,\r\n                    //     tooltip: 'Add',\r\n                    //     onClick: handleClickOpen,\r\n                    // }\r\n                  ]}\r\n                // editable={{\r\n                    // isEditable: rowData => rowData.name === 'a', // only name(a) rows would be editable\r\n                    // isEditHidden: rowData => rowData.name === 'x',\r\n                    // isDeletable: rowData => rowData.name === 'b', // only name(b) rows would be deletable,\r\n                    // isDeleteHidden: rowData => rowData.name === 'y',\r\n                    // onBulkUpdate: changes => \r\n                    //     new Promise((resolve, reject) => {\r\n                    //         setTimeout(() => {\r\n                    //             /* setData([...data, newData]); */\r\n\r\n                    //             resolve();\r\n                    //         }, 1000);\r\n                    //     }),\r\n                    // onRowAddCancelled: rowData => console.log('Row adding cancelled'),\r\n                    // onRowUpdateCancelled: rowData => console.log('Row editing cancelled'),\r\n                    // onRowAdd: newData =>\r\n                    //     new Promise((resolve, reject) => {\r\n                    //         setTimeout(() => {\r\n                    //             /* setData([...data, newData]); */\r\n\r\n                    //             resolve();\r\n                    //         }, 1000);\r\n                    //     }),\r\n                    // onRowUpdate: (newData, oldData) =>\r\n                    //     new Promise((resolve, reject) => {\r\n                    //         setTimeout(() => {\r\n                    //             const dataUpdate = [...data];\r\n                    //             const index = oldData.tableData.id;\r\n                    //             dataUpdate[index] = newData;\r\n                    //             setData([...dataUpdate]);\r\n\r\n                    //             resolve();\r\n                    //         }, 1000);\r\n                    //     }),\r\n                    // onRowDelete: oldData =>\r\n                    //     new Promise((resolve, reject) => {\r\n                    //         setTimeout(() => {\r\n                    //             const dataDelete = [...data];\r\n                    //             const index = oldData.tableData.id;\r\n                    //             dataDelete.splice(index, 1);\r\n                    //             setData([...dataDelete]);\r\n\r\n                    //             resolve();\r\n                    //         }, 1000);\r\n                    //     })\r\n                // }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\Dialog.js",["51","52","53","54","55","56","57","58","59"],"C:\\Users\\Student-PC\\stepper\\client\\src\\components\\Stepper.js",[],"C:\\Users\\Student-PC\\stepper\\client\\src\\components\\register\\Register.js",["60","61","62","63","64","65","66"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  TextField,\r\n  InputLabel,\r\n  Grid,\r\n  DatePicker,\r\n  CssBaseline,\r\n  RadioGroup,\r\n  FormLabel,\r\n  MenuItem,\r\n  Select,\r\n  FormGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputText\r\n} from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider  } from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n  const [Header, setHeader] = useState({\r\n    MRNo: \"\",\r\n    TokenNo: \"\",\r\n    RegistrationDate: new Date(),\r\n    Name: \"\",\r\n    FatherOrHusband: \"\",\r\n    DOB: new Date(),\r\n    Age: \"\",\r\n    Gender: \"\",\r\n    Religion: \"\",\r\n    District: \"\",\r\n    City: \"\",\r\n    Area: \"\",\r\n    HousNo: \"\",\r\n    Address: \"\",\r\n    CNIC: \"\",\r\n    Phone: \"\",\r\n    OffPhone: \"\",\r\n    Mobile: \"\",\r\n    RefBy: \"\",\r\n    Remarks: \"\",\r\n    IsRejected: false,\r\n    IsZakat: false,\r\n    IsPAFEmp: false,\r\n    MonthlyConsLimit: 0,\r\n    ThumbImage: \"\",\r\n    NOY: \"\",\r\n    EmpID: \"\",\r\n    IsStaff: false,\r\n    CreateUser: \"\",\r\n    ModifyUser: \"\",\r\n    CreateDate: \"\",\r\n    ModifyDate: \"\"\r\n});\r\n\r\n  return (\r\n    <div style={{ padding: 16, margin: 'auto', maxWidth: '100%' }}>\r\n      <Grid container>\r\n        <Grid md={4} sm={12}>\r\n          <TextField value={Header.MRNo} id=\"MRNo\"\r\n            type=\"text\" disabled={true}\r\n            label=\"M.R. #\"/>\r\n        </Grid>\r\n        <Grid md={4} sm={12}>\r\n          <TextField value={Header.TokenNo} id=\"TokenNo\" type=\"text\" \r\n            onChange={(e) => setHeader({ ...Header, TokenNo: e.target.value })}\r\n            label=\"TokenNo\"/>\r\n        </Grid>\r\n        <Grid md={4} sm={12}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker disableToolbar variant=\"inline\" format=\"MM/dd/yyyy\"\r\n              margin=\"normal\" id=\"RegistrationDate\" label=\"Registration Date\"\r\n              value={Header.RegistrationDate}\r\n              onChange={(date) => setHeader({ ...Header, RegistrationDate: date })}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid md={4} sm={12}>\r\n          <TextField value={Header.Name} id=\"Name\" type=\"text\" \r\n            onChange={(e) => setHeader({ ...Header, Name: e.target.value })}\r\n            label=\"Name\"/>\r\n        </Grid>\r\n        <Grid md={4} sm={12}>\r\n          <TextField value={Header.FatherOrHusband} id=\"FatherOrHusband\" type=\"text\" \r\n            onChange={(e) => setHeader({ ...Header, FatherOrHusband: e.target.value })}\r\n            label=\"Father Name\"/>\r\n        </Grid>\r\n        <Grid md={4} sm={12}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker disableToolbar variant=\"inline\" format=\"MM/dd/yyyy\"\r\n              margin=\"normal\" id=\"DOB\" label=\"Date of Birth\"\r\n              value={Header.DOB}\r\n              onChange={(date) => setHeader({ ...Header, DOB: date })}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid md={4} sm={12}>\r\n          <TextField value={Header.Age} id=\"Age\" type=\"number\" \r\n            onChange={(e) => setHeader({ ...Header, Age: e.target.value })}\r\n            label=\"Age\"/>\r\n        </Grid>\r\n        <Grid md={4} sm={12} lg={3}>\r\n          <FormControl>\r\n            <InputLabel id=\"demo-simple-select-helper-label\">Gender</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-helper-label\"\r\n              id=\"Gender\"\r\n              value={Header.Gender}\r\n              onChange={(e) => setHeader({ ...Header, Gender: e.target.value })}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"male\">Male</MenuItem>\r\n              <MenuItem value=\"female\">Female</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid md={4} sm={12} lg={3}>\r\n          <FormControl>\r\n            <InputLabel id=\"demo-simple-select-helper-label\">Religion</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-helper-label\"\r\n              id=\"Religion\"\r\n              value={Header.Religion}\r\n              onChange={(e) => setHeader({ ...Header, Religion: e.target.value })}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"islam\">Islam</MenuItem>\r\n              <MenuItem value=\"christian\">Christian</MenuItem>\r\n              <MenuItem value=\"other\">Other</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid md={4} sm={12}>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-helper-label\">IsZakat</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-helper-label\"\r\n              id=\"IsZakat\"\r\n              value={Header.IsZakat}\r\n              onChange={(e) => setHeader({ ...Header, IsZakat: e.target.value })}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value={true}>Yes</MenuItem>\r\n              <MenuItem value={false}>No</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid md={4} sm={12}>\r\n          <TextField value={Header.CNIC} id=\"CNIC\" type=\"number\" \r\n            onChange={(e) => setHeader({ ...Header, CNIC: e.target.value })}\r\n            label=\"CNIC\"/>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container>\r\n          <Grid sm={12}>\r\n              {/* <Fieldset legend=\"Contact\" style={{ padding: 10 }}> */}\r\n                  <Grid container>\r\n                    <Grid md={4} sm={12}>\r\n                      <TextField value={Header.HousNo} id=\"HousNo\" type=\"text\"\r\n                        Change={(e) => setHeader({ ...Header, HousNo: e.target.value })}\r\n                        label=\"HousNo\"/>\r\n                    </Grid>\r\n                    <Grid md={4} sm={12}>\r\n                      <TextField value={Header.Address} id=\"Address\" type=\"text\"\r\n                        Change={(e) => setHeader({ ...Header, Address: e.target.value })}\r\n                        label=\"Address\"/>\r\n                    </Grid>\r\n                    <Grid md={4} sm={12}>\r\n                      <TextField value={Header.Area} id=\"Area\" type=\"text\"\r\n                        Change={(e) => setHeader({ ...Header, Area: e.target.value })}\r\n                        label=\"Area\"/>\r\n                    </Grid>\r\n                    <Grid md={4} sm={12}>\r\n                      <TextField value={Header.District} id=\"District\" type=\"text\"\r\n                        Change={(e) => setHeader({ ...Header, District: e.target.value })}\r\n                        label=\"District\"/>\r\n                    </Grid>\r\n                    <Grid md={4} sm={12}>\r\n                      <TextField value={Header.City} id=\"City\" type=\"text\"\r\n                        Change={(e) => setHeader({ ...Header, City: e.target.value })}\r\n                        label=\"City\"/>\r\n                    </Grid>\r\n                    <Grid md={4} sm={12}>\r\n                      <TextField value={Header.Phone} id=\"Phone\" type=\"number\"\r\n                        Change={(e) => setHeader({ ...Header, Phone: e.target.value })}\r\n                        label=\"Phone\"/>\r\n                    </Grid>\r\n                    <Grid md={4} sm={12}>\r\n                      <TextField value={Header.OffPhone} id=\"OffPhone\" type=\"number\"\r\n                        Change={(e) => setHeader({ ...Header, OffPhone: e.target.value })}\r\n                        label=\"Office Phone\"/>\r\n                    </Grid>\r\n                    <Grid md={4} sm={12}>\r\n                      <TextField value={Header.Mobile} id=\"Mobile\" type=\"number\"\r\n                        Change={(e) => setHeader({ ...Header, Mobile: e.target.value })}\r\n                        label=\"Mobile\"/>\r\n                    </Grid>\r\n                    <Grid md={4} sm={12}>\r\n                      <TextField value={Header.MonthlyConsLimit} id=\"MonthlyConsLimit\" type=\"number\"\r\n                        Change={(e) => setHeader({ ...Header, MonthlyConsLimit: e.target.value })}\r\n                        label=\"Monthly Consumtion Limit\"/>\r\n                    </Grid>  \r\n                  </Grid>\r\n              {/* </Fieldset> */}\r\n          </Grid>\r\n      </Grid>\r\n      <br />\r\n      \r\n      <Grid container>\r\n          <Grid sm={12}>\r\n              {/* <Fieldset legend=\"Reffer Info\" style={{ padding: 10 }}> */}\r\n                  <Grid container>\r\n                      <Grid md={4} sm={12}>\r\n                        <TextField value={Header.RefBy} id=\"RefBy\" type=\"text\"\r\n                          Change={(e) => setHeader({ ...Header, RefBy: e.target.value })}\r\n                          label=\"Refered By\"/>\r\n                      </Grid>\r\n                      <Grid md={4} sm={12}>\r\n                        <TextField value={Header.EmpID} id=\"EmpID\" type=\"text\"\r\n                          Change={(e) => setHeader({ ...Header, EmpID: e.target.value })}\r\n                          label=\"Employee ID\"/>\r\n                      </Grid>\r\n                      <Grid md={4} sm={12}>\r\n                        <TextField value={Header.NOY} id=\"NOY\" type=\"text\"\r\n                          Change={(e) => setHeader({ ...Header, NOY: e.target.value })}\r\n                          label=\"NOY\"/>\r\n                      </Grid>\r\n                      <Grid md={4} sm={12}>\r\n                        <TextField value={Header.Remarks} id=\"Remarks\" type=\"text\"\r\n                          Change={(e) => setHeader({ ...Header, Remarks: e.target.value })}\r\n                          label=\"Remarks\"/>\r\n                      </Grid>\r\n                  </Grid>\r\n              {/* </Fieldset> */}\r\n          </Grid>\r\n      </Grid>\r\n\r\n      <Grid container>\r\n          <Grid className=\"p-col-12\">\r\n              {/* <Fieldset legend=\"Staff\" style={{ padding: 10 }}> */}\r\n                  <Grid container>\r\n                    <Grid md={4} sm={12}>\r\n                      <TextField value={Header.RefBy} id=\"RefBy\" type=\"text\"\r\n                        Change={(e) => setHeader({ ...Header, RefBy: e.target.value })}\r\n                        label=\"Refered By\"/>\r\n                    </Grid>\r\n                      {/* <Grid md={4} sm={12}>\r\n                          <div style={{ marginTop: 4 }}>\r\n                              <CheckboxButton label={\"Is PAF Employee\"} disabled={property.viewList} checked={Header.IsPAFEmp} style={{ fontSize: '20px' }}\r\n                                  Change={e => setHeader({ ...Header, IsPAFEmp: !Header.IsPAFEmp })} />\r\n                          </div>\r\n                      </div>\r\n                      <div className=\"p-col-2 p-lg-2 p-md-4 p-sm-12\">\r\n                          <div style={{ marginTop: 4 }}>\r\n                              <CheckboxButton label={\"Is Staff\"} disabled={property.viewList} checked={Header.IsStaff} style={{ fontSize: '20px' }}\r\n                                  Change={e => setHeader({ ...Header, IsStaff: !Header.IsStaff })} />\r\n                          </div>\r\n                      </div>\r\n                      <div className=\"p-col-2 p-lg-2 p-md-4 p-sm-12\">\r\n                          <div style={{ marginTop: 4 }}>\r\n                              <CheckboxButton label={\"Is Rejected\"} disabled={property.viewList} checked={Header.IsRejected} style={{ fontSize: '20px' }}\r\n                                  Change={e => setHeader({ ...Header, IsRejected: !Header.IsRejected })} />\r\n                          </div>\r\n                      </div> */}\r\n                  </Grid>\r\n              {/* </Fieldset> */}\r\n          </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\service\\Service.js",["67","68"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { TextField, Checkbox, Radio, Select } from 'final-form-material-ui';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n  RadioGroup,\r\n  FormLabel,\r\n  MenuItem,\r\n  FormGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\n// Picker\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  DatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nfunction DatePickerWrapper(props) {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    meta,\r\n    ...rest\r\n  } = props;\r\n  const showError =\r\n    ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) &&\r\n    meta.touched;\r\n\r\n  return (\r\n    <DatePicker\r\n      {...rest}\r\n      name={name}\r\n      helperText={showError ? meta.error || meta.submitError : undefined}\r\n      error={showError}\r\n      inputProps={restInput}\r\n      onChange={onChange}\r\n      value={value === '' ? null : value}\r\n    />\r\n  );\r\n}\r\n\r\nfunction TimePickerWrapper(props) {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    meta,\r\n    ...rest\r\n  } = props;\r\n  const showError =\r\n    ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) &&\r\n    meta.touched;\r\n\r\n  return (\r\n    <TimePicker\r\n      {...rest}\r\n      name={name}\r\n      helperText={showError ? meta.error || meta.submitError : undefined}\r\n      error={showError}\r\n      inputProps={restInput}\r\n      onChange={onChange}\r\n      value={value === '' ? null : value}\r\n    />\r\n  );\r\n}\r\n\r\nconst onSubmit = async values => {\r\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n  await sleep(300);\r\n  window.alert(JSON.stringify(values, 0, 2));\r\n};\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (!values.firstName) {\r\n    errors.firstName = 'Required';\r\n  }\r\n  if (!values.lastName) {\r\n    errors.lastName = 'Required';\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Required';\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default function Services() {\r\n  return (\r\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 600 }}>\r\n      <CssBaseline />\r\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n        🏁 Services\r\n      </Typography>\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        initialValues={{ employed: true, stooge: 'larry' }}\r\n        validate={validate}\r\n        render={({ handleSubmit, reset, submitting, pristine, values }) => (\r\n          <form onSubmit={handleSubmit} noValidate>\r\n            <Paper style={{ padding: 16 }}>\r\n              <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"firstName\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"First Name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"lastName\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Last Name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    name=\"email\"\r\n                    fullWidth\r\n                    required\r\n                    component={TextField}\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    label=\"Employed\"\r\n                    control={\r\n                      <Field\r\n                        name=\"employed\"\r\n                        component={Checkbox}\r\n                        type=\"checkbox\"\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Best Stooge</FormLabel>\r\n                    <RadioGroup row>\r\n                      <FormControlLabel\r\n                        label=\"Larry\"\r\n                        control={\r\n                          <Field\r\n                            name=\"stooge\"\r\n                            component={Radio}\r\n                            type=\"radio\"\r\n                            value=\"larry\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Moe\"\r\n                        control={\r\n                          <Field\r\n                            name=\"stooge\"\r\n                            component={Radio}\r\n                            type=\"radio\"\r\n                            value=\"moe\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Curly\"\r\n                        control={\r\n                          <Field\r\n                            name=\"stooge\"\r\n                            component={Radio}\r\n                            type=\"radio\"\r\n                            value=\"curly\"\r\n                          />\r\n                        }\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Sauces</FormLabel>\r\n                    <FormGroup row>\r\n                      <FormControlLabel\r\n                        label=\"Ketchup\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"ketchup\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Mustard\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"mustard\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Salsa\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"salsa\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Guacamole 🥑\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"guacamole\"\r\n                          />\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"notes\"\r\n                    component={TextField}\r\n                    multiline\r\n                    label=\"Notes\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"city\"\r\n                    component={Select}\r\n                    label=\"Select a City\"\r\n                    formControlProps={{ fullWidth: true }}\r\n                  >\r\n                    <MenuItem value=\"London\">London</MenuItem>\r\n                    <MenuItem value=\"Paris\">Paris</MenuItem>\r\n                    <MenuItem value=\"Budapest\">\r\n                      A city with a very long Name\r\n                    </MenuItem>\r\n                  </Field>\r\n                </Grid>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid item xs={6}>\r\n                    <Field\r\n                      name=\"rendez-vous\"\r\n                      component={DatePickerWrapper}\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      label=\"Rendez-vous\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Field\r\n                      name=\"alarm\"\r\n                      component={TimePickerWrapper}\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      label=\"Alarm\"\r\n                    />\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={reset}\r\n                    disabled={submitting || pristine}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={submitting}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\welfare\\Welfare.js",["69","70"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { TextField, Checkbox, Radio, Select } from 'final-form-material-ui';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n  RadioGroup,\r\n  FormLabel,\r\n  MenuItem,\r\n  FormGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\n// Picker\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  DatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nfunction DatePickerWrapper(props) {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    meta,\r\n    ...rest\r\n  } = props;\r\n  const showError =\r\n    ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) &&\r\n    meta.touched;\r\n\r\n  return (\r\n    <DatePicker\r\n      {...rest}\r\n      name={name}\r\n      helperText={showError ? meta.error || meta.submitError : undefined}\r\n      error={showError}\r\n      inputProps={restInput}\r\n      onChange={onChange}\r\n      value={value === '' ? null : value}\r\n    />\r\n  );\r\n}\r\n\r\nfunction TimePickerWrapper(props) {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    meta,\r\n    ...rest\r\n  } = props;\r\n  const showError =\r\n    ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) &&\r\n    meta.touched;\r\n\r\n  return (\r\n    <TimePicker\r\n      {...rest}\r\n      name={name}\r\n      helperText={showError ? meta.error || meta.submitError : undefined}\r\n      error={showError}\r\n      inputProps={restInput}\r\n      onChange={onChange}\r\n      value={value === '' ? null : value}\r\n    />\r\n  );\r\n}\r\n\r\nconst onSubmit = async values => {\r\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n  await sleep(300);\r\n  window.alert(JSON.stringify(values, 0, 2));\r\n};\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (!values.firstName) {\r\n    errors.firstName = 'Required';\r\n  }\r\n  if (!values.lastName) {\r\n    errors.lastName = 'Required';\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Required';\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default function Welfare() {\r\n  return (\r\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 600 }}>\r\n      <CssBaseline />\r\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n        🏁 Welfare\r\n      </Typography>\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        initialValues={{ employed: true, stooge: 'larry' }}\r\n        validate={validate}\r\n        render={({ handleSubmit, reset, submitting, pristine, values }) => (\r\n          <form onSubmit={handleSubmit} noValidate>\r\n            <Paper style={{ padding: 16 }}>\r\n              <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"firstName\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"First Name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"lastName\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Last Name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    name=\"email\"\r\n                    fullWidth\r\n                    required\r\n                    component={TextField}\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    label=\"Employed\"\r\n                    control={\r\n                      <Field\r\n                        name=\"employed\"\r\n                        component={Checkbox}\r\n                        type=\"checkbox\"\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Best Stooge</FormLabel>\r\n                    <RadioGroup row>\r\n                      <FormControlLabel\r\n                        label=\"Larry\"\r\n                        control={\r\n                          <Field\r\n                            name=\"stooge\"\r\n                            component={Radio}\r\n                            type=\"radio\"\r\n                            value=\"larry\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Moe\"\r\n                        control={\r\n                          <Field\r\n                            name=\"stooge\"\r\n                            component={Radio}\r\n                            type=\"radio\"\r\n                            value=\"moe\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Curly\"\r\n                        control={\r\n                          <Field\r\n                            name=\"stooge\"\r\n                            component={Radio}\r\n                            type=\"radio\"\r\n                            value=\"curly\"\r\n                          />\r\n                        }\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Sauces</FormLabel>\r\n                    <FormGroup row>\r\n                      <FormControlLabel\r\n                        label=\"Ketchup\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"ketchup\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Mustard\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"mustard\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Salsa\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"salsa\"\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        label=\"Guacamole 🥑\"\r\n                        control={\r\n                          <Field\r\n                            name=\"sauces\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                            value=\"guacamole\"\r\n                          />\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"notes\"\r\n                    component={TextField}\r\n                    multiline\r\n                    label=\"Notes\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"city\"\r\n                    component={Select}\r\n                    label=\"Select a City\"\r\n                    formControlProps={{ fullWidth: true }}\r\n                  >\r\n                    <MenuItem value=\"London\">London</MenuItem>\r\n                    <MenuItem value=\"Paris\">Paris</MenuItem>\r\n                    <MenuItem value=\"Budapest\">\r\n                      A city with a very long Name\r\n                    </MenuItem>\r\n                  </Field>\r\n                </Grid>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid item xs={6}>\r\n                    <Field\r\n                      name=\"rendez-vous\"\r\n                      component={DatePickerWrapper}\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      label=\"Rendez-vous\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Field\r\n                      name=\"alarm\"\r\n                      component={TimePickerWrapper}\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      label=\"Alarm\"\r\n                    />\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={reset}\r\n                    disabled={submitting || pristine}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={submitting}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"80","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":16},{"ruleId":"75","severity":1,"message":"81","line":17,"column":21,"nodeType":"77","messageId":"78","endLine":17,"endColumn":31},{"ruleId":"75","severity":1,"message":"82","line":23,"column":18,"nodeType":"77","messageId":"78","endLine":23,"endColumn":25},{"ruleId":"75","severity":1,"message":"83","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"84","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":20},{"ruleId":"75","severity":1,"message":"85","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":16},{"ruleId":"75","severity":1,"message":"86","line":7,"column":8,"nodeType":"77","messageId":"78","endLine":7,"endColumn":12},{"ruleId":"75","severity":1,"message":"87","line":8,"column":8,"nodeType":"77","messageId":"78","endLine":8,"endColumn":15},{"ruleId":"75","severity":1,"message":"88","line":10,"column":8,"nodeType":"77","messageId":"78","endLine":10,"endColumn":15},{"ruleId":"75","severity":1,"message":"89","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":18},{"ruleId":"75","severity":1,"message":"90","line":12,"column":8,"nodeType":"77","messageId":"78","endLine":12,"endColumn":18},{"ruleId":"75","severity":1,"message":"91","line":13,"column":8,"nodeType":"77","messageId":"78","endLine":13,"endColumn":17},{"ruleId":"75","severity":1,"message":"92","line":7,"column":3,"nodeType":"77","messageId":"78","endLine":7,"endColumn":13},{"ruleId":"75","severity":1,"message":"93","line":8,"column":3,"nodeType":"77","messageId":"78","endLine":8,"endColumn":14},{"ruleId":"75","severity":1,"message":"94","line":9,"column":3,"nodeType":"77","messageId":"78","endLine":9,"endColumn":13},{"ruleId":"75","severity":1,"message":"95","line":10,"column":3,"nodeType":"77","messageId":"78","endLine":10,"endColumn":12},{"ruleId":"75","severity":1,"message":"96","line":13,"column":3,"nodeType":"77","messageId":"78","endLine":13,"endColumn":12},{"ruleId":"75","severity":1,"message":"97","line":15,"column":3,"nodeType":"77","messageId":"78","endLine":15,"endColumn":19},{"ruleId":"75","severity":1,"message":"98","line":16,"column":3,"nodeType":"77","messageId":"78","endLine":16,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"99","line":8,"column":3,"nodeType":"77","messageId":"78","endLine":8,"endColumn":7},{"ruleId":"75","severity":1,"message":"79","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"99","line":8,"column":3,"nodeType":"77","messageId":"78","endLine":8,"endColumn":7},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'Dialog' is defined but never used.","'setColumns' is assigned a value but never used.","'setData' is assigned a value but never used.","'Button' is defined but never used.","'ListItemText' is defined but never used.","'ListItem' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'CloseIcon' is defined but never used.","'DatePicker' is defined but never used.","'CssBaseline' is defined but never used.","'RadioGroup' is defined but never used.","'FormLabel' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'InputText' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]