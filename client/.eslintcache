[{"C:\\Users\\Student-PC\\stepper\\client\\src\\index.js":"1","C:\\Users\\Student-PC\\stepper\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Student-PC\\stepper\\client\\src\\App.js":"3","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\list\\List.js":"4","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\Dialog.js":"5","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\Stepper.js":"6","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\register\\Register.js":"7","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\service\\Service.js":"8","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\welfare\\Welfare.js":"9","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\GlobalHeader.js":"10"},{"size":517,"mtime":1614314804511,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1614314804511,"results":"13","hashOfConfig":"12"},{"size":215,"mtime":1614316209720,"results":"14","hashOfConfig":"12"},{"size":4057,"mtime":1614751688270,"results":"15","hashOfConfig":"12"},{"size":1459,"mtime":1614751703007,"results":"16","hashOfConfig":"12"},{"size":4639,"mtime":1614755187334,"results":"17","hashOfConfig":"12"},{"size":11485,"mtime":1614757451725,"results":"18","hashOfConfig":"12"},{"size":5683,"mtime":1614751782520,"results":"19","hashOfConfig":"12"},{"size":11380,"mtime":1614751787613,"results":"20","hashOfConfig":"12"},{"size":1773,"mtime":1614757002550,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1nha7un",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Student-PC\\stepper\\client\\src\\index.js",[],["46","47"],"C:\\Users\\Student-PC\\stepper\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Student-PC\\stepper\\client\\src\\App.js",["48"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport List from './components/list/List.js'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <List/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\list\\List.js",["49","50"],"C:\\Users\\Student-PC\\stepper\\client\\src\\components\\Dialog.js",["51","52","53","54","55","56","57","58","59"],"C:\\Users\\Student-PC\\stepper\\client\\src\\components\\Stepper.js",["60","61"],"C:\\Users\\Student-PC\\stepper\\client\\src\\components\\register\\Register.js",["62","63"],"C:\\Users\\Student-PC\\stepper\\client\\src\\components\\service\\Service.js",["64","65","66"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  TextField,\r\n  InputLabel,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\nimport GlobalHeader from '../GlobalHeader';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Service({next, back}) {\r\n  const classes = useStyles();\r\n  const [Header, setHeader] = useState({\r\n    TokenNo: \"\",\r\n    ServiceDate: new Date(),\r\n    MRNo: 'recID',\r\n    Ward: \"\",\r\n    Amount: \"\",\r\n    TotalAmount: \"\",\r\n    PatientContribution: \"\",\r\n    Remarks: \"\",\r\n    CreatedUser: \"Admin\",\r\n    ModifyUser: \"Admin\"\r\n});\r\n\r\n  const handleSubmit = () => {\r\n    console.log(Header);\r\n    next();\r\n  }\r\n  return (\r\n    <div>\r\n      <GlobalHeader forward={handleSubmit} back={back} title=\"Service\"/>\r\n      <div style={{ padding: 16, margin: 'auto', maxWidth: '80%', justifyContent:'center' }}>\r\n      \r\n        <Grid container>\r\n          <Grid sm={12}>\r\n            <Grid container spacing={4}>\r\n              <Grid item lg={7} sm={12}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <TextField value={Header.MRNo} id=\"MRNo\" fullWidth\r\n                      type=\"text\" disabled={true}\r\n                      label=\"M.R. #\"/>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <TextField value={Header.TokenNo} id=\"TokenNo\" type=\"text\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, TokenNo: e.target.value })}\r\n                      label=\"Token No\"/>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <TextField id=\"ServiceDate\" label=\"Service Date\" type=\"date\"\r\n                      value={Header.ServiceDate} fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, ServiceDate: e.target.value })}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}/>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel  id=\"demo-simple-select-helper-label\">Gender</InputLabel>\r\n                      <Select \r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"Gender\"\r\n                        value={Header.Gender}\r\n                        onChange={(e) => setHeader({ ...Header, Gender: e.target.value })}\r\n                      >\r\n                        <MenuItem value=\"male\">Male</MenuItem>\r\n                        <MenuItem value=\"female\">Female</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel  id=\"demo-simple-select-helper-label\">Ward</InputLabel>\r\n                      <Select \r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"Ward\"\r\n                        value={Header.Ward}\r\n                        onChange={(e) => setHeader({ ...Header, Ward: e.target.value })}\r\n                      >\r\n                        <MenuItem value=\"Ward #1\">Ward #1</MenuItem>\r\n                        <MenuItem value=\" Ward #2\">Ward #2</MenuItem>\r\n                        <MenuItem value=\"Ward #3\">Ward #3</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <TextField value={Header.Amount} id=\"Amount\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, Amount: e.target.value })}\r\n                      label=\"Amount\"/>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <TextField value={Header.TotalAmount} id=\"TotalAmount\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, TotalAmount: e.target.value })}\r\n                      label=\"Total Amount\"/>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <TextField value={Header.PatientContribution} id=\"PatientContribution\" type=\"text\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, PatientContribution: e.target.value })}\r\n                      label=\"Patient Contribution\"/>\r\n                  </Grid>\r\n                  <Grid item md={8} sm={12} lg={6}>\r\n                    <TextField value={Header.Remarks} id=\"Remarks\" type=\"text\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, Remarks: e.target.value })}\r\n                      label=\"Remarks\"/>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item lg={1}/>\r\n              <Grid item lg={4} sm={12}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item md={6} sm={12} lg={6}>\r\n                    <TextField value={Header.TokenNo} id=\"TokenNo\" type=\"text\" fullWidth\r\n                      // onChange={(e) => setHeader({ ...Header, MaleKids: e.target.value })}\r\n                      label=\"Token No\" disabled={true}/>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid> \r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\welfare\\Welfare.js",["67"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  TextField,\r\n  InputLabel,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\nimport GlobalHeader from '../GlobalHeader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Welfare({next, back}) {\r\n  const classes = useStyles();\r\n  const [Header, setHeader] = useState({\r\n    MRNo: 'recID',\r\n    TokenNo: \"\",\r\n    WelfareDate: new Date(),\r\n    Profession: \"\",\r\n    Fiqa: \"\",\r\n    Education: '',\r\n    Cast: \"\",\r\n    MonthlyIncome: 0,\r\n    Guardian: \"\",\r\n    OtherInfo: \"\",\r\n    MaleKids: \"\",\r\n    FemaleKids: \"\",\r\n    OtherKids: \"\",\r\n    Brothers: \"\",\r\n    Sisters: \"\",\r\n    NoOFFamilyMembers: \"\",\r\n    IsMarried: false,\r\n    IsAbleToPay: false,\r\n    IsEarning: false,\r\n    HaveGold: false,\r\n    ReqName: '',\r\n    ReqPhone: \"\",\r\n    ReqRelationWithPatient: '',\r\n    CreateUser: \"Admin\",\r\n    ModifyUser: \"Admin\",\r\n});\r\n\r\n  const handleSubmit = () => {\r\n    console.log(Header);\r\n    next();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <GlobalHeader forward={handleSubmit} back={back} title=\"Welfare\"/>\r\n      <div style={{ padding: 16, margin: 'auto', maxWidth: '80%', justifyContent:'center' }}>\r\n        <Grid container spacing={2}>\r\n          <Grid item md={4} sm={12} lg={3}>\r\n            <TextField value={Header.MRNo} id=\"MRNo\" fullWidth\r\n              type=\"text\" disabled={true}\r\n              label=\"M.R. #\"/>\r\n          </Grid>\r\n          <Grid item md={4} sm={12} lg={3}>\r\n            <TextField value={Header.TokenNo} id=\"TokenNo\" type=\"text\" fullWidth\r\n              onChange={(e) => setHeader({ ...Header, TokenNo: e.target.value })}\r\n              label=\"TokenNo\"/>\r\n          </Grid>\r\n          <Grid item md={4} sm={12} lg={3}>\r\n            <TextField id=\"WelfareDate\" label=\"Welfare Date\" type=\"date\"\r\n              value={Header.WelfareDate} fullWidth\r\n              onChange={(e) => setHeader({ ...Header, WelfareDate: e.target.value })}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}/>\r\n          </Grid>\r\n          <Grid item md={4} sm={12} lg={3}>\r\n            <FormControlLabel color=\"primary\"\r\n              control={<Checkbox checked={Header.IsRejected} name=\"Is Rejected\" fullWidth\r\n              onChange={e => setHeader({ ...Header, IsRejected: !Header.IsRejected })} />}\r\n              label=\"Zakaat\"\r\n            />\r\n            <FormControlLabel color=\"primary\"\r\n              control={<Checkbox checked={Header.IsRejected} name=\"Is Rejected\" fullWidth\r\n              onChange={e => setHeader({ ...Header, IsRejected: !Header.IsRejected })} />}\r\n              label=\"Donation\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container>\r\n          <Grid sm={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={4} sm={12} lg={3}>\r\n                <TextField value={Header.Profession} id=\"Profession\" type=\"text\" fullWidth\r\n                  onChange={(e) => setHeader({ ...Header, Profession: e.target.value })}\r\n                  label=\"Profession\"/>\r\n              </Grid>\r\n              <Grid item md={4} sm={12} lg={3}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel  id=\"demo-simple-select-helper-label\">Education</InputLabel>\r\n                  <Select \r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"Education\"\r\n                    value={Header.Education}\r\n                    onChange={(e) => setHeader({ ...Header, Education: e.target.value })}\r\n                  >\r\n                    <MenuItem value=\"matriculation\">Matriculation</MenuItem>\r\n                    <MenuItem value=\" intermediate\">Intermediate</MenuItem>\r\n                    <MenuItem value=\"bachelors\">Bachelors</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={4} sm={12} lg={3}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel  id=\"demo-simple-select-helper-label\">Fiqa</InputLabel>\r\n                  <Select \r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"Fiqa\"\r\n                    value={Header.Fiqa}\r\n                    onChange={(e) => setHeader({ ...Header, Fiqa: e.target.value })}\r\n                  >\r\n                    <MenuItem value=\"shia\">Shia</MenuItem>\r\n                    <MenuItem value=\"sunni\">Sunni</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={4} sm={12} lg={3}>\r\n                <TextField value={Header.Cast} id=\"Cast\" type=\"text\" fullWidth\r\n                  onChange={(e) => setHeader({ ...Header, Cast: e.target.value })}\r\n                  label=\"Cast\"/>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        \r\n        <Grid container>\r\n          <Grid sm={12}>\r\n            <Grid container spacing={4}>\r\n              <Grid item lg={7} sm={12}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item md={6} sm={12} lg={6}>\r\n                    <TextField value={Header.ReqName} id=\"ReqName\" type=\"text\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, ReqName: e.target.value })}\r\n                      label=\"Requestor Name\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel  id=\"demo-simple-select-helper-label\">Relation With Patient</InputLabel>\r\n                      <Select \r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"ReqRelationWithPatient\"\r\n                        value={Header.ReqRelationWithPatient}\r\n                        onChange={(e) => setHeader({ ...Header, ReqRelationWithPatient: e.target.value })}\r\n                      >\r\n                        <MenuItem value=\"mother\">Mother</MenuItem>\r\n                        <MenuItem value=\"father\">Father</MenuItem>\r\n                        <MenuItem value=\"daughter\">Daughter</MenuItem>\r\n                        <MenuItem value=\"son\">Son</MenuItem>\r\n                        <MenuItem value=\"self\">Self</MenuItem>\r\n\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.ReqPhone} id=\"ReqPhone\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, ReqPhone: e.target.value })}\r\n                      label=\"Requestor Phone\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.Guardian} id=\"Guardian\" type=\"text\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, Guardian: e.target.value })}\r\n                      label=\"Guardian\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.MonthlyIncome} id=\"MonthlyIncome\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, MonthlyIncome: e.target.value })}\r\n                      label=\"Monthly Income\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.OtherInfo} id=\"OtherInfo\" type=\"text\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, OtherInfo: e.target.value })}\r\n                      label=\"Other Info\"/>\r\n                  </Grid>\r\n                  <Grid item sm={12} md={12} lg={12}>\r\n                  <FormControlLabel color=\"primary\"\r\n                    control={<Checkbox checked={Header.IsMarried} name=\"Is Maried\" fullWidth\r\n                    onChange={e => setHeader({ ...Header, IsMarried: !Header.IsMarried })} />}\r\n                    label=\"Maried\"\r\n                  />\r\n                  <FormControlLabel color=\"primary\"\r\n                    control={<Checkbox checked={Header.HaveGold} name=\"HaveGold\" fullWidth\r\n                    onChange={e => setHeader({ ...Header, HaveGold: !Header.HaveGold })} />}\r\n                    label=\"Have Gold\"\r\n                  />\r\n                  <FormControlLabel color=\"primary\"\r\n                    control={<Checkbox checked={Header.IsEarning} name=\"IsEarning\" fullWidth\r\n                    onChange={e => setHeader({ ...Header, IsEarning: !Header.IsEarning })} />}\r\n                    label=\"Is Earning\"\r\n                  />\r\n                  <FormControlLabel color=\"primary\"\r\n                    control={<Checkbox checked={Header.IsAbleToPay} name=\"IsAbleToPay\" fullWidth\r\n                    onChange={e => setHeader({ ...Header, IsAbleToPay: !Header.IsAbleToPay })} />}\r\n                    label=\"Is Able To Pay\"\r\n                  />\r\n                </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item lg={1}/>\r\n              <Grid item lg={4} sm={12}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item md={6} sm={12} lg={6}>\r\n                    <TextField value={Header.MaleKids} id=\"MaleKids\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, MaleKids: e.target.value })}\r\n                      label=\"No of Kids(male)\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.FemaleKids} id=\"FemaleKids\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, FemaleKids: e.target.value })}\r\n                      label=\"No of Kids(female)\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.OtherKids} id=\"OtherKids\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, OtherKids: e.target.value })}\r\n                      label=\"Other Kids\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.Brothers} id=\"Brothers\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, Brothers: e.target.value })}\r\n                      label=\"No of Brothers\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.Sisters} id=\"Sisters\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, Sisters: e.target.value })}\r\n                      label=\"No f Sisters\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.NoOFFamilyMembers} id=\"NoOFFamilyMembers\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, NoOFFamilyMembers: e.target.value })}\r\n                      label=\"Family Members\"/>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid> \r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\n","C:\\Users\\Student-PC\\stepper\\client\\src\\components\\GlobalHeader.js",["68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":12},{"ruleId":"73","severity":1,"message":"77","line":15,"column":21,"nodeType":"75","messageId":"76","endLine":15,"endColumn":31},{"ruleId":"73","severity":1,"message":"78","line":21,"column":18,"nodeType":"75","messageId":"76","endLine":21,"endColumn":25},{"ruleId":"73","severity":1,"message":"79","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":14},{"ruleId":"73","severity":1,"message":"80","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":20},{"ruleId":"73","severity":1,"message":"81","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":16},{"ruleId":"73","severity":1,"message":"82","line":7,"column":8,"nodeType":"75","messageId":"76","endLine":7,"endColumn":12},{"ruleId":"73","severity":1,"message":"83","line":8,"column":8,"nodeType":"75","messageId":"76","endLine":8,"endColumn":15},{"ruleId":"73","severity":1,"message":"84","line":10,"column":8,"nodeType":"75","messageId":"76","endLine":10,"endColumn":15},{"ruleId":"73","severity":1,"message":"85","line":11,"column":8,"nodeType":"75","messageId":"76","endLine":11,"endColumn":18},{"ruleId":"73","severity":1,"message":"86","line":12,"column":8,"nodeType":"75","messageId":"76","endLine":12,"endColumn":18},{"ruleId":"73","severity":1,"message":"87","line":13,"column":8,"nodeType":"75","messageId":"76","endLine":13,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":58,"column":19,"nodeType":"90","messageId":"91","endLine":58,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":71,"column":19,"nodeType":"90","messageId":"91","endLine":71,"endColumn":21},{"ruleId":"73","severity":1,"message":"92","line":27,"column":9,"nodeType":"75","messageId":"76","endLine":27,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":66,"column":13,"nodeType":"90","messageId":"91","endLine":66,"endColumn":15},{"ruleId":"73","severity":1,"message":"93","line":10,"column":3,"nodeType":"75","messageId":"76","endLine":10,"endColumn":11},{"ruleId":"73","severity":1,"message":"94","line":11,"column":3,"nodeType":"75","messageId":"76","endLine":11,"endColumn":19},{"ruleId":"73","severity":1,"message":"92","line":27,"column":9,"nodeType":"75","messageId":"76","endLine":27,"endColumn":16},{"ruleId":"73","severity":1,"message":"92","line":26,"column":9,"nodeType":"75","messageId":"76","endLine":26,"endColumn":16},{"ruleId":"73","severity":1,"message":"95","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":14},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setColumns' is assigned a value but never used.","'setData' is assigned a value but never used.","'Button' is defined but never used.","'ListItemText' is defined but never used.","'ListItem' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'CloseIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'classes' is assigned a value but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'fade' is defined but never used.","no-global-assign","no-unsafe-negation"]